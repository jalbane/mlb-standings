{"version":3,"sources":["components/Team.js","League.js","App.js","reportWebVitals.js","index.js"],"names":["Team","props","fixedGamesBack","gamesBack","toFixed","team","record","wins","losses","pct","streak","League","useState","teams","setTeams","sortUp","setSortDirection","loading","setLoading","reorganize","key","value","state","sort","a","b","prevState","map","item","teamId","league","useEffect","fetch","method","accept","then","res","json","data","results","summary","style","marginBottom","type","height","colspan","onClick","localeCompare","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90263e26.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Team(props){\r\n\r\n\r\n    let fixedGamesBack = props.gamesBack.toFixed(1)\r\n    return (\r\n        <tr>\r\n            <td>{props.team}</td>\r\n            <td>{props.record}</td>\r\n            <td>{props.wins}</td>\r\n            <td>{props.losses}</td>\r\n            <td>{props.pct.toFixed(3)}</td>\r\n            <td>{fixedGamesBack < 0.5 ? '-' : fixedGamesBack }</td>\r\n            <td>{props.streak}</td>\r\n        </tr>\r\n        )\r\n    \r\n}\r\n\r\nexport default Team;","import React,{useState, useEffect} from 'react';\r\nimport Team from './components/Team';\r\nimport { AiFillCaretUp, AiFillCaretDown} from \"react-icons/ai\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nfunction League(props){\r\n    const [teams, setTeams] = useState([])\r\n    const [sortUp, setSortDirection] = useState({\r\n        pct: true,\r\n        gamesBack: true,\r\n        wins: true,\r\n        losses: true,\r\n        team: false\r\n    })\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect( () => {\r\n        fetch(`https://api-mlb.herokuapp.com/league/${props.league}`, {\r\n            method: 'GET',\r\n            accept: \"*/*\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            let results = data.map(  (item) => \r\n            <Team \r\n                key = {item.teamId}\r\n                teamId = {item.teamId} \r\n                team = {item.team} \r\n                league = {item.league}\r\n                record = {item.summary.record}\r\n                wins = {item.summary.wins}\r\n                losses = {item.summary.losses}\r\n                pct = {item.summary.pct}\r\n                gamesBack = {item.summary.gamesBack}\r\n                streak = {item.summary.streak}\r\n            />)\r\n        setTeams(results)\r\n        setLoading(false)\r\n        })\r\n    },[])\r\n    \r\n    function reorganize(key){\r\n        let state = [...teams]\r\n        state = state.sort( (a,b) => {\r\n            if (sortUp[`${key}`]){\r\n                return b.props[`${key}`] - a.props[`${key}`] \r\n            }\r\n            else{\r\n                return a.props[`${key}`] - b.props[`${key}`]\r\n            }\r\n        })\r\n        let value\r\n        if (key === \"pct\"){\r\n            value = sortUp[`${key}`]\r\n            setSortDirection( (prevState)=> ({\r\n                ...prevState,\r\n                pct: !value\r\n            }))\r\n        }\r\n        if (key === \"gamesBack\"){\r\n            value = sortUp[`${key}`]\r\n            setSortDirection( (prevState)=> ({\r\n                ...prevState,\r\n                gamesBack: !value\r\n            }))\r\n        }\r\n        if (key === \"wins\"){\r\n            value = sortUp[`${key}`]\r\n            setSortDirection( (prevState)=> ({\r\n                ...prevState,\r\n                wins: !value\r\n            }))\r\n        }\r\n        if (key === \"losses\"){\r\n            value = sortUp[`${key}`]\r\n            setSortDirection( (prevState)=> ({\r\n                ...prevState,\r\n                losses: !value\r\n            }))\r\n        }\r\n        state = state.map((item) => \r\n        <Team \r\n            key = {item.props.teamId}\r\n            teamId = {item.props.teamId} \r\n            team = {item.props.team} \r\n            league = {item.props.league}\r\n            record = {item.props.record}\r\n            wins = {item.props.wins}\r\n            losses = {item.props.losses}\r\n            pct = {item.props.pct}\r\n            gamesBack = {item.props.gamesBack}\r\n            streak = {item.props.streak}\r\n        />)\r\n        setTeams(state)\r\n\r\n    }\r\n\r\n    function reorganizeAlpha(){\r\n        let state = [...teams]\r\n        state = state.sort( (a,b) => {\r\n            if (sortUp.team){\r\n                return a.props.team.localeCompare(b.props.team)\r\n            }else{\r\n                return b.props.team.localeCompare(a.props.team)\r\n            }\r\n        })\r\n        let value = sortUp.team\r\n        setSortDirection(prevState => ({\r\n            ...prevState,\r\n            team: !value \r\n        }))\r\n        state = state.map((item) => \r\n        <Team \r\n            key = {item.props.teamId}\r\n            teamId = {item.props.teamId} \r\n            team = {item.props.team} \r\n            league = {item.props.league}\r\n            record = {item.props.record}\r\n            wins = {item.props.wins}\r\n            losses = {item.props.losses}\r\n            pct = {item.props.pct}\r\n            gamesBack = {item.props.gamesBack}\r\n            streak = {item.props.streak}\r\n        />)\r\n        setTeams(state)\r\n    }\r\n\r\n    return( \r\n        <div> \r\n            {loading ? <div style={{marginBottom: '15%'}}> Loading <Loader type=\"Revolvingdots\" height={40}/></div>\r\n            :<table>\r\n                <thead><tr>{props.league === 0 ? <th colspan=\"7\">American League</th>: <th colspan=\"7\">National League</th>}</tr></thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td> Team <button onClick={reorganizeAlpha}>{sortUp.team ? <AiFillCaretUp />: <AiFillCaretDown />  } </button></td>\r\n                        <td>Record</td>\r\n                        <td>Wins <button onClick ={() => reorganize(\"wins\")}> {sortUp.wins ? <AiFillCaretUp />: <AiFillCaretDown />  }</button></td>\r\n                        <td>Losses <button onClick ={() => reorganize(\"losses\")}> {sortUp.losses ? <AiFillCaretUp />: <AiFillCaretDown />  }</button></td>\r\n                        <td>Win % <button onClick ={() => reorganize(\"pct\")}> {sortUp.pct ? <AiFillCaretUp />: <AiFillCaretDown />  }</button></td>\r\n                        <td>Games Back <button onClick ={() => reorganize(\"gamesBack\")}> {sortUp.gamesBack ? <AiFillCaretUp />: <AiFillCaretDown />  }</button> </td>\r\n                        <td>Streak</td>\r\n                    </tr>\r\n                    {teams}\r\n                </tbody>\r\n            </table>}   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default League;","import './App.css';\r\nimport League from './League';\r\n{/*import Mlb from './components/Mlb'*/}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n       <h3> MLB Standings </h3>\r\n        {/*<Mlb />*/}\r\n        <League league={0}/>\r\n        <League league={1}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}