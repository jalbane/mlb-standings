{"version":3,"sources":["components/DisplayTeam.js","containers/Main.js","components/DisplayGame.js","containers/FinalScores.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayTeam","props","fixedGamesBack","gamesBack","toFixed","team","wins","losses","pct","streak","Wrapper","styled","div","Main","useState","american","national","teams","setTeams","sortDirection","setSortDirection","loading","setLoading","mapStateToDummyComponent","state","league","map","item","teamId","record","prevState","reorganizeWins","sort","a","b","reverse","reorganizeLosses","reorganizeWinPercentage","reorganizeGamesBack","reorganizeAlpha","localeCompare","useEffect","results","fetch","method","accept","then","res","json","data","resultsAmerican","summary","slice","resultsNational","style","marginTop","color","height","colSpan","onClick","CompletedGames","date","split","formatDate","rest","className","stadium","join","concat","winner","winnerRuns","loser","loserRuns","FinalScores","completeGameRecap","setCompleteGameRecap","legend","setLegend","pageNumber","setPageNumber","maxPages","useRef","result","index","key","name","runs","current","pages","Array","from","onChange","e","target","value","tempData","filter","toLowerCase","includes","placeholder","display","paddingLeft","paddingRight","DisplayGame","App","basename","Navbar","expand","bg","Toggle","Collapse","Nav","Link","as","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09615b59.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction DisplayTeam(props){\r\n\r\n\r\n    let fixedGamesBack = props.gamesBack.toFixed(1)\r\n    return (\r\n        <tr>\r\n            <td>{props.team}</td>\r\n            <td>{props.wins}</td>\r\n            <td>{props.losses}</td>\r\n            <td>{props.pct.toFixed(3)}</td>\r\n            <td>{fixedGamesBack < 0.5 ? '-' : fixedGamesBack }</td>\r\n            <td>{props.streak}</td>\r\n        </tr>\r\n        )\r\n    \r\n}\r\n\r\nexport default DisplayTeam;","import React,{useState, useEffect} from 'react';\r\nimport DisplayTeam from '../components/DisplayTeam';\r\nimport { AiFillCaretUp, AiFillCaretDown} from \"react-icons/ai\";\r\nimport Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 0 auto;\r\n    padding-top: 2%;\r\n    padding-bottom: 2%;\r\n\r\n    & table {\r\n        margin-top: 0px;\r\n        margin-bottom: 0px;\r\n    }\r\n\r\n    & table:nth-child(2){\r\n        margin-top: 2%;\r\n    }\r\n\r\n    & table > thead > tr > th{\r\n        background-color: #BF0D3E;\r\n        color: white;\r\n        padding-left: 25px;\r\n    }\r\n\r\n    & table:nth-child(2) > thead > tr > th{\r\n        background-color: #041E42;\r\n    }\r\n\r\n`\r\n\r\nfunction Main(){\r\n    const [teams, setTeams] = useState({\r\n        american: [\r\n\r\n        ],\r\n        national: [\r\n\r\n        ]\r\n    })\r\n    const [sortDirection, setSortDirection] = useState({\r\n        american: {    \r\n            pct: true,\r\n            gamesBack: true,\r\n            wins: false,\r\n            losses: true,\r\n            team: false\r\n        },\r\n        national: {    \r\n            pct: true,\r\n            gamesBack: true,\r\n            wins: false,\r\n            losses: true,\r\n            team: false\r\n        }\r\n\r\n    })\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect( () => {\r\n        let results\r\n        fetch(`https://api-mlb.herokuapp.com/`, {\r\n            method: 'GET',\r\n            accept: \"*/*\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            results = data.map(  (item) => \r\n                <DisplayTeam \r\n                    key = {item.teamId}\r\n                    teamId = {item.teamId} \r\n                    team = {item.team} \r\n                    league = {item.league}\r\n                    record = {item.summary.record}\r\n                    wins = {item.summary.wins}\r\n                    losses = {item.summary.losses}\r\n                    pct = {item.summary.pct}\r\n                    gamesBack = {item.summary.gamesBack}\r\n                    streak = {item.summary.streak}\r\n                />)\r\n            results = results.sort( (a,b) => {return a.props.league - b.props.league} )\r\n            let resultsAmerican = results.slice(0, 15)\r\n            let resultsNational = results.slice(-15)\r\n            setTeams({\r\n                american: resultsAmerican,\r\n                national: resultsNational\r\n            })\r\n            setLoading(false)\r\n        })\r\n    },[])\r\n\r\n    function mapStateToDummyComponent(state, league){\r\n        state = state.map((item) => \r\n        <DisplayTeam \r\n            key = {item.props.teamId}\r\n            teamId = {item.props.teamId} \r\n            team = {item.props.team} \r\n            league = {item.props.league}\r\n            record = {item.props.record}\r\n            wins = {item.props.wins}\r\n            losses = {item.props.losses}\r\n            pct = {item.props.pct}\r\n            gamesBack = {item.props.gamesBack}\r\n            streak = {item.props.streak}\r\n        />)\r\n        if(league === 'american'){\r\n            setTeams( (prevState) => ({\r\n                ...prevState,\r\n                american: state\r\n            }))\r\n        }\r\n        if(league === 'national'){\r\n            setTeams( (prevState) => ({\r\n                ...prevState,\r\n                national: state\r\n            }))\r\n        }\r\n    }\r\n\r\n    function reorganizeWins(league){\r\n        let state = [...teams[`${league}`]]\r\n        state = state.sort( (a,b) => {\r\n            return b.props.wins - a.props.wins \r\n        })\r\n        if (!sortDirection[`${league}`].wins)\r\n            state.reverse()\r\n        \r\n        setSortDirection( (prevState)=> ({\r\n            ...prevState,\r\n            [`${league}`]:\r\n            {\r\n                ...prevState[`${league}`],\r\n                wins: !prevState[`${league}`].wins\r\n            }\r\n        }))\r\n\r\n        mapStateToDummyComponent(state, league)\r\n    }\r\n\r\n    function reorganizeLosses(league){\r\n        let state = [...teams[`${league}`]]\r\n        state = state.sort( (a,b) => {\r\n            return b.props.losses - a.props.losses \r\n        })\r\n        if (!sortDirection[`${league}`].losses)\r\n            state.reverse()\r\n        \r\n        setSortDirection( (prevState)=> ({\r\n            ...prevState,\r\n            [`${league}`]:\r\n            {\r\n                ...prevState[`${league}`],\r\n                losses: !prevState[`${league}`].losses\r\n            }\r\n        }))\r\n\r\n        mapStateToDummyComponent(state, league)\r\n    }\r\n    \r\n    function reorganizeWinPercentage(league){\r\n        let state = [...teams[`${league}`]]\r\n        state = state.sort( (a,b) => {\r\n            return b.props.pct - a.props.pct \r\n        })\r\n        if (!sortDirection[`${league}`].pct)\r\n            state.reverse()\r\n        \r\n        setSortDirection( (prevState)=> ({\r\n            ...prevState,\r\n            [`${league}`]:\r\n            {\r\n                ...prevState[`${league}`],\r\n                pct: !prevState[`${league}`].pct\r\n            }\r\n        }))\r\n        mapStateToDummyComponent(state, league)\r\n    }\r\n\r\n    function reorganizeGamesBack(league){\r\n        let state = [...teams[`${league}`]]\r\n        state = state.sort( (a,b) => {\r\n            return b.props.gamesBack - a.props.gamesBack \r\n        })\r\n        if (!sortDirection[`${league}`].gamesBack)\r\n            state.reverse()\r\n\r\n        setSortDirection( (prevState)=> ({\r\n            ...prevState,\r\n            [`${league}`]:\r\n            {\r\n                ...prevState[`${league}`],\r\n                gamesBack: !prevState[`${league}`].gamesBack\r\n            }\r\n        }))\r\n        mapStateToDummyComponent(state, league)\r\n    }\r\n\r\n    function reorganizeAlpha(league){\r\n        let state = [...teams[`${league}`]]\r\n        state = state.sort( (a,b) => {\r\n            if (sortDirection[`${league}`].team){\r\n                return a.props.team.localeCompare(b.props.team)\r\n            }else{\r\n                return b.props.team.localeCompare(a.props.team)\r\n            }\r\n        })\r\n\r\n        setSortDirection( (prevState) => ({\r\n            ...prevState,\r\n            [`${league}`]:\r\n            {\r\n                ...prevState[`${league}`],\r\n                team: !prevState[`${league}`].team\r\n            }\r\n        }))\r\n        \r\n        mapStateToDummyComponent(state, league)\r\n    }\r\n\r\n    return( \r\n        <Wrapper> \r\n            {loading \r\n            ? <div style={{marginTop: '5%'}}> Loading <Loader color={'black'} height={60}/></div>\r\n            :\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"6\">American League</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Team<button onClick={() => reorganizeAlpha(\"american\")}>{sortDirection.american.team ? <AiFillCaretUp />: <AiFillCaretDown />  } </button></td>\r\n                            <td>Wins <button onClick ={() => reorganizeWins(\"american\")}> {sortDirection.american.wins ? <AiFillCaretUp />: <AiFillCaretDown />  }</button></td>\r\n                            <td>Losses <button onClick ={() => reorganizeLosses(\"american\")}> {sortDirection.american.losses ? <AiFillCaretUp />: <AiFillCaretDown />  }</button></td>\r\n                            <td>Win % <button onClick ={() => reorganizeWinPercentage(\"american\")}> {sortDirection.american.pct ? <AiFillCaretUp />: <AiFillCaretDown />  }</button></td>\r\n                            <td>Games Back <button onClick ={() => reorganizeGamesBack(\"american\")}> {sortDirection.american.gamesBack ? <AiFillCaretUp />: <AiFillCaretDown />  }</button> </td>\r\n                            <td>Streak</td>\r\n                        </tr>\r\n                        {teams.american}\r\n                    </tbody>\r\n                </table>\r\n                <table>\r\n                    <thead><tr><th colSpan=\"6\">National League</th></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Team<button onClick={() => reorganizeAlpha(\"national\")}>{sortDirection.national.team ? <AiFillCaretUp />: <AiFillCaretDown />  } </button></td>\r\n                            <td>Wins <button onClick ={() => reorganizeWins(\"national\")}> {sortDirection.national.wins ? <AiFillCaretUp />: <AiFillCaretDown />  }</button></td>\r\n                            <td>Losses <button onClick ={() => reorganizeLosses(\"national\")}> {sortDirection.national.losses ? <AiFillCaretUp />: <AiFillCaretDown />  }</button></td>\r\n                            <td>Win % <button onClick ={() => reorganizeWinPercentage(\"national\")}> {sortDirection.national.pct ? <AiFillCaretUp />: <AiFillCaretDown />  }</button></td>\r\n                            <td>Games Back <button onClick ={() => reorganizeGamesBack(\"national\")}> {sortDirection.national.gamesBack ? <AiFillCaretUp />: <AiFillCaretDown />  }</button> </td>\r\n                            <td>Streak</td>\r\n                        </tr>\r\n                        {teams.national}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            }   \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction CompletedGames( {props} ){\r\n    let [formatDate, ...rest] = props.date.split('T')[0].split('-')\r\n\r\n    return (\r\n        <div className = \"game-container\">\r\n            <div className = \"stadium-date-container\">   \r\n                <div> {props.stadium} </div>\r\n                <div> {rest.join('/').concat('/', formatDate)} </div>\r\n            </div>\r\n            <div className = \"winner-container\"> \r\n                <strong> {props.winner} \r\n                    <div> {props.winnerRuns} </div>\r\n                </strong>\r\n            </div>\r\n            <div className = \"loser-container\"> {props.loser} \r\n                <div> {props.loserRuns} </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompletedGames;\r\n\r\n/**/","\r\nimport React, {useState, useEffect, useRef} from 'react';\r\nimport DisplayGame from '../components/DisplayGame';\r\n\r\nfunction FinalScores(){\r\n    const [completeGameRecap, setCompleteGameRecap] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n    const [legend, setLegend] = useState()\r\n    const [pageNumber, setPageNumber] = useState(0)\r\n    let maxPages = useRef(null)\r\n    useEffect( () => {\r\n        let results = []\r\n        fetch(`https://api-mlb.herokuapp.com/regular-season/page?number=${pageNumber}`, {\r\n            method: 'GET',\r\n            accept: \"*/*\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            results = data.result.map( (item, index)=> {return {\r\n                key: index,\r\n                date: item.date,\r\n                stadium: item.stadium,\r\n                winner: item.winner.name,\r\n                winnerRuns: item.winner.runs,\r\n                loser: item.loser.name,\r\n                loserRuns: item.loser.runs\r\n            }\r\n            })\r\n            maxPages.current = data.pages\r\n            setCompleteGameRecap(Array.from(results))\r\n            setLegend(Array.from(results))\r\n            setLoading(false)\r\n        })\r\n    },[pageNumber])\r\n\r\n    const handleSearch = (e) => {\r\n        if (e.target.value !== \"\"){\r\n            let tempData = legend.filter( (item, index) => {\r\n            if (item.winner.toLowerCase().includes(e.target.value.toLowerCase()) \r\n                || item.loser.toLowerCase().includes(e.target.value.toLowerCase())\r\n                || item.stadium.toLowerCase().includes(e.target.value.toLowerCase())\r\n                || item.date.toLowerCase().includes(e.target.value.toLowerCase())\r\n            ){\r\n                return {\r\n                        key: index,\r\n                        date: item.date,\r\n                        stadium: item.stadium,\r\n                        winner: item.winner.name,\r\n                        winnerRuns: item.winner.runs,\r\n                        loser: item.loser.name,\r\n                        loserRuns: item.loser.runs\r\n                }\r\n            }\r\n            })\r\n            return setCompleteGameRecap(tempData)\r\n        }\r\n        else \r\n            return setCompleteGameRecap(legend)\r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            { loading\r\n                ? <div> loading </div> \r\n                : \r\n                    <div >   \r\n                        <input onChange = {handleSearch} placeholder=\"Search for Teams, Stadiums or dates (mm-dd)\"/>\r\n                        <div>\r\n                            <button onClick={() => pageNumber ? setPageNumber(  prevState => prevState - 1 ): 0 }> <strong> Go back </strong> </button>\r\n                            <div style={{display: 'inline-block', paddingLeft: \"75px\", paddingRight: \"75px\"}}> Page {pageNumber + 1} out of {maxPages.current + 1} </div>\r\n                            <button onClick={() => pageNumber === maxPages.current? null : setPageNumber(prevState => prevState + 1)}> <strong> Next page </strong> </button>\r\n                        </div>\r\n                        <div className = \"layout-container\"> \r\n                            {completeGameRecap.map( (item, index) => <DisplayGame key={index} props={item} /> ) }\r\n                        </div> \r\n                    </div>\r\n            }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinalScores;","import './App.css';\r\nimport Main from './containers/Main.js';\r\nimport {HashRouter, Switch, Link, Route} from \"react-router-dom\";\r\nimport FinalScores from './containers/FinalScores.js';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter basename =\"/\">\r\n          <Navbar expand=\"xxl\" bg=\"light\">\r\n            <Navbar.Toggle/>\r\n            <Navbar.Collapse className=\"nav-collapse\">\r\n            <Nav>\r\n              <Nav.Link as = {Link} to = \"/\"> Standings </Nav.Link>\r\n              <Nav.Link as = {Link} to = \"/games\"> Final Scores </Nav.Link>\r\n              </Nav></Navbar.Collapse>\r\n            \r\n          </Navbar>\r\n        <Switch>\r\n          <Route exact path = \"/\">\r\n            <Main />\r\n          </Route>\r\n          <Route path = \"/games\">\r\n            <FinalScores />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}